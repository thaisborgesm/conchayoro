{"version":3,"sources":["../../src/react/index.tsx","../../src/react/analytics.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,WAAW;;;ACGX,SAAS,cAAc,OAA2B;AACvD,SAAO;AACT;;;ADSO,SAAS,gBAAgB;AAAA,EAC9B;AACF,GAEG;AACD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,yBAAqB;AAAA,MACrB,yBAAyB;AAAA,QACvB,QAAQ,kBAAkB,WAAW;AAAA,MACvC;AAAA;AAAA,EACF;AAEJ;AAKO,SAAS,WAAW;AAAA,EACzB;AACF,GAEG;AACD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,oBAAgB;AAAA,MAChB,yBAAyB;AAAA,QACvB,QAAQ,kBAAkB,MAAM;AAAA,MAClC;AAAA;AAAA,EACF;AAEJ","sourcesContent":["import React from 'react';\nimport {\n  FlagDefinitionsType as DefinitionsType,\n  FlagValuesType as ValuesType,\n  safeJsonStringify,\n} from '..';\n\n// the generic type T is not actually used but is great to\n// signal what is encrypted\ntype Encrypted<T> = string;\n\n/**\n * Registers variant definitions with the toolbar\n */\nexport function FlagDefinitions({\n  definitions,\n}: {\n  definitions: DefinitionsType | Encrypted<DefinitionsType>;\n}) {\n  return (\n    <script\n      type=\"application/json\"\n      data-flag-definitions\n      dangerouslySetInnerHTML={{\n        __html: safeJsonStringify(definitions),\n      }}\n    />\n  );\n}\n\n/**\n * Registers variant values with the toolbar\n */\nexport function FlagValues({\n  values,\n}: {\n  values: ValuesType | Encrypted<ValuesType>;\n}) {\n  return (\n    <script\n      type=\"application/json\"\n      data-flag-values\n      dangerouslySetInnerHTML={{\n        __html: safeJsonStringify(values),\n      }}\n    />\n  );\n}\n\nexport { FlagsReporter } from './analytics';\n","/**\n * @deprecated It is no longer necessary to render this component. Web Analytics now automatically detects flags present in the DOM.\n */\nexport function FlagsReporter(props: { keys: string[] }) {\n  return null;\n}\n"]}