// src/providers/happykit.ts
async function getHappyKitData(options) {
  const hints = [];
  if (!options.apiToken) {
    hints.push({
      key: "happykit/missing-api-token",
      text: "Missing HappyKit API Token"
    });
  }
  if (!options.envKey) {
    hints.push({
      key: "happykit/missing-env-key",
      text: "Missing HappyKit Environment Key"
    });
  }
  if (hints.length > 0)
    return { definitions: {}, hints };
  const response = await fetch(
    `https://happykit.dev/api/project/${options.envKey}`,
    {
      method: "GET",
      headers: {
        "content-type": "application/json",
        Authorization: `Bearer ${options.apiToken}`
      },
      cache: "no-store"
    }
  );
  if (response.status !== 200) {
    await response.arrayBuffer();
    return {
      definitions: {},
      hints: [
        {
          key: "happykit/response-not-ok",
          text: `Failed to fetch HappyKit (Received ${response.status} response)`
        }
      ]
    };
  }
  const body = await response.json();
  const env = options.envKey.startsWith("flags_pub_development_") ? "development" : options.envKey.startsWith("flags_pub_preview_") ? "preview" : "production";
  const definitions = body.flags.reduce(
    (acc, flag) => {
      acc[flag.slug] = {
        origin: `https://happykit.dev/${body.owner.slug}/${body.project.slug}/flag/${env}/${flag.slug}`,
        description: flag.description,
        options: flag.variants.map((variant) => ({
          value: variant.value,
          label: variant.name
        }))
      };
      return acc;
    },
    {}
  );
  return { definitions, hints };
}
export {
  getHappyKitData
};
//# sourceMappingURL=happykit.js.map